// This file was generated by counterfeiter
package fake

import (
	"sync"

	"github.com/phogolabs/gom/migration"
)

type MigrationProvider struct {
	MigrationsStub        func() ([]migration.Item, error)
	migrationsMutex       sync.RWMutex
	migrationsArgsForCall []struct{}
	migrationsReturns     struct {
		result1 []migration.Item
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *MigrationProvider) Migrations() ([]migration.Item, error) {
	fake.migrationsMutex.Lock()
	fake.migrationsArgsForCall = append(fake.migrationsArgsForCall, struct{}{})
	fake.recordInvocation("Migrations", []interface{}{})
	fake.migrationsMutex.Unlock()
	if fake.MigrationsStub != nil {
		return fake.MigrationsStub()
	}
	return fake.migrationsReturns.result1, fake.migrationsReturns.result2
}

func (fake *MigrationProvider) MigrationsCallCount() int {
	fake.migrationsMutex.RLock()
	defer fake.migrationsMutex.RUnlock()
	return len(fake.migrationsArgsForCall)
}

func (fake *MigrationProvider) MigrationsReturns(result1 []migration.Item, result2 error) {
	fake.MigrationsStub = nil
	fake.migrationsReturns = struct {
		result1 []migration.Item
		result2 error
	}{result1, result2}
}

func (fake *MigrationProvider) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.migrationsMutex.RLock()
	defer fake.migrationsMutex.RUnlock()
	return fake.invocations
}

func (fake *MigrationProvider) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ migration.ItemProvider = new(MigrationProvider)
